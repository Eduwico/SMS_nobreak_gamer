name: Publicar Imagem Docker do Add-on

on:
  push:
    branches:
      - main # Ou a branch principal do seu repositório
    tags:
      - 'v*.*.*' # Opcional: Dispara em tags como v1.0.0, v1.1.0 etc.

env:
  # Nome da imagem no GHCR. Ajuste conforme necessário.
  # Para o seu caso, parece ser 'sms_gamer_ups_monitor'
  IMAGE_NAME: sms_gamer_ups_monitor

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Permissão essencial para escrever no GHCR

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar QEMU (para build multi-arquitetura)
        uses: docker/setup-qemu-action@v3

      - name: Configurar Buildx (para build multi-arquitetura)
        uses: docker/setup-buildx-action@v3

      - name: Fazer login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Token automático fornecido pelo GitHub Actions

      - name: Gerar tags e metadados para a imagem
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}} # Ex: 1.1.0
            type=semver,pattern={{major}}.{{minor}} # Ex: 1.1
            type=semver,pattern={{major}} # Ex: 1
            type=raw,value=latest,enable={{is_default_branch}} # Tag 'latest' na branch principal

      - name: Construir e enviar a imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: . # Caminho para a pasta do seu Dockerfile
          platforms: linux/amd64,linux/arm64 # Arquiteturas a serem construídas
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


